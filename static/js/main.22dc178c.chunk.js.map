{"version":3,"sources":["utils.js","values.js","Error.js","announcements lazy /^/.//.*$/ groupOptions: {} namespace object","data sync /^/.//v.*//Attack/.json$","data sync /^/.//v.*//Archer/.json$","data sync /^/.//v.*//Cavalry/.json$","data sync /^/.//v.*//Conquering/.json$","data sync /^/.//v.*//Defense/.json$","data sync /^/.//v.*//Garrison/.json$","data sync /^/.//v.*//Gathering/.json$","data sync /^/.//v.*//Infantry/.json$","data sync /^/.//v.*//Integration/.json$","data sync /^/.//v.*//Leadership/.json$","data sync /^/.//v.*//Mobility/.json$","data sync /^/.//v.*//Peacekeeping/.json$","data sync /^/.//v.*//Skill/.json$","data sync /^/.//v.*//Support/.json$","data sync /^/.//v.*//Versatility/.json$","serviceWorker.js","Progress.js","GuidedTour.js","NavBarButtons.js","Tooltips.js","NavBarSettings.js","NavBarCommander.js","Modals.js","NavBar.js","SummaryPanel.js","StatsPanel.js","StatsTalentsPanel.js","InfoPanel.js","data/AllTrees.js","App.js","index.js"],"names":["sumArray","arr","reduce","partial","a","isMultidimensional","filter","Array","isArray","length","getMaxTalentCount","talentValues","replaceTalentText","text","replacementIdx","newText","i","re","RegExp","replace","getTreeName","color","commander","commanderData","Commanders","getIncompletePrereqs","id","values","treeData","acc","prereq","push","setTitle","r","y","b","sep","newTitle","createSummaryString","title","document","rSpent","ySpent","bSpent","name","shortName","getURL","embed","window","location","origin","search","isEmbed","path","includes","isTouchDevice","matchMedia","matches","isNewUser","localStorage","getItem","JSON","parse","isUpgrade","oldVer","newVer","split","map","Number","oldMajor","oldMinor","newMajor","newMinor","encode","match","v","valuesToLetters","hasOwnProperty","join","decode","encoded","k","lettersToValues","maxPoints","getEmptyState","dataVersion","storage","nodeSize","isShownInfoPanel","isShownValues","isShownTotals","isScreenshotStats","isSpeedMode","isInstantZero","isInstantMax","isAutoFill","isShownMouseXY","isShownTalentID","showProgress","red","yellow","blue","c","d","e","f","g","h","j","l","m","n","o","p","q","s","t","u","w","x","z","ErrorBoundary","props","state","error","errorInfo","this","setState","style","whiteSpace","toString","componentStack","children","Component","webpackAsyncContext","req","__webpack_require__","Promise","resolve","then","Error","code","ids","keys","Object","module","exports","webpackContext","webpackContextResolve","Boolean","hostname","Container","isFinished","animationDuration","opacity","pointerEvents","transition","Bar","progress","background","height","left","marginLeft","position","top","width","zIndex","boxShadow","display","right","transform","withNProgress","GuidedTour","restartTour","run","stepIndex","handleJoyrideCallback","data","action","index","status","type","STATUS","FINISHED","SKIPPED","ACTIONS","CLOSE","EVENTS","STEP_AFTER","TARGET_NOT_FOUND","PREV","steps","content","target","placement","disableBeacon","locale","last","callback","continuous","showSkipButton","disableOverlayClose","styles","options","primaryColor","overlayColor","NavBarButtons","useState","isDownloading","setIsDownloading","className","Button","data-testid","variant","size","disabled","calcPointsSpent","onClick","showReset","icon","faTrashAlt","elementID","addBanner","ReactGA","event","category","label","dpr","devicePixelRatio","node","getElementById","visibility","domtoimage","toJpeg","offsetHeight","offsetWidth","transformOrigin","dataUrl","link","createElement","href","download","click","takeScreenshot","Spinner","animation","faCamera","showShare","faShareAlt","HelpTooltip","OverlayTrigger","flip","trigger","overlay","Tooltip","tooltip","faQuestionCircle","GeneralTooltip","NavBarSettings","Dropdown","alignRight","as","NavItem","Toggle","NavLink","faCog","Menu","Form","Group","Header","Check","checked","onChange","toggleInfoPanel","toggleValueDisplay","toggleTotalDisplay","Divider","ToggleButtonGroup","value","val","toggleNodeSize","ToggleButton","toggleScreenshotStats","toggleSpeedMode","toggleInstantZero","toggleInstantMax","toggleAutoFill","process","NavBarCommander","toggleSelect","prevState","isOpen","createSelectItems","commanderList","sort","legendaryCommanders","epicCommanders","forEach","selectItem","Item","key","changeCommander","alt","src","tier","nextProps","nextState","show","onToggle","InvalidBuildModal","toggle","modal","Modal","centered","onHide","closeButton","faExclamationTriangle","Body","message","Footer","AnnouncementModal","version","isInvalidBuild","semVerValues","React","lazy","getFilenameFromVersion","Announcement","loadAnnouncement","faBullhorn","fallback","bugs","url","rel","faInfoCircle","AboutModal","showAnnouncement","toggleAnnounce","getContributors","contributors","showDonate","Tabs","defaultActiveKey","Tab","eventKey","author","donate","toggleTour","ResetModal","resetTalents","ShareModal","copyURL","input","readOnly","select","execCommand","innerHTML","copyEmbedURL","shareSocial","faLink","defaultValue","faCopy","EmailShareButton","EmailIcon","round","RedditShareButton","RedditIcon","TwitterShareButton","TwitterIcon","WeiboShareButton","WeiboIcon","WhatsappShareButton","WhatsappIcon","PocketShareButton","PocketIcon","faCode","rows","NavBar","showAbout","aboutModalRef","resetModalRef","shareModalRef","donateStyles","fill","donateStyle","Math","floor","random","ref","component","Navbar","minWidth","Brand","faHeart","Nav","toggleMouseXY","toggleTalentID","GuideIcon","memo","guides","SummaryPanel","guide","getGuides","calcPointsRemaining","StatsPanel","allStats","stats","getAllStats","MainTalent","points","Collapse","in","isShownStatsTalents","StatsTalentsPanel","toggleStatsTalents","getAllMainTalents","allMainTalents","mainTalents","talent","InfoPanel","talentData","selectedValues","pointsAssigned","statName","stat","calcStats","orientation","loadTreeData","Attack","require","Archer","Cavalry","Conquering","Defense","Garrison","Gathering","Infantry","Integration","Leadership","Mobility","Peacekeeping","Skill","Support","Versatility","TreePanel","App","updateURL","method","queryString","history","replaceState","zeroTalents","createZeroTalents","treePanelRef","drawLines","resetPanZoom","numRed","numYellow","numBlue","changeTalentValue","treeName","idx","how","amount","newArr","lines","jsPlumb","source","addClass","removeClass","createMaxValueArray","maxArray","repaint","setItem","toggleMouseListeners","tourRef","announceRef","invalidModalFlag","invalidBuildMessage","urlParams","slice","urlDataVersion","comID","parseInt","commanderName","find","talents","some","el","isAnimating","self","initialize","pageview","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister","homepage"],"mappings":"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","file":"static/js/main.22dc178c.chunk.js","sourcesContent":["import { valuesToLetters, lettersToValues } from './values';\nimport Commanders from './data/commanders.json';\nimport { title } from '../package.json';\n\n/**\n * Sum all values of an array\n *\n * @param {Number[]} arr Array to calculate sum of\n * @returns {Number} Sum of the array\n */\nexport function sumArray(arr) {\n  return arr.reduce((partial, a) => partial + a, 0);\n}\n\n/**\n * Check if two arrays are equal\n *\n * @param {array} a First array\n * @param {array} b Second array\n * @returns {boolean} Are the two arrays equal?\n */\nexport function arraysEqual(a, b) {\n  if (a === b) return true;\n  if (a == null || b == null) return false;\n  // eslint-disable-next-line\n  if (a.length != b.length) return false;\n\n  for (var i = 0; i < a.length; ++i) {\n    if (a[i] !== b[i]) return false;\n  }\n  return true;\n}\n\n/**\n * Check if all array elements are different/unique\n *\n * @param {Array} arr Array to check\n * @returns {Boolean} Whether all elements are different/unique\n */\nexport function arrayAllUnique(arr) {\n  const tmp = new Set(arr);\n  if (tmp.size === arr.length) {\n    return true;\n  }\n  return false;\n}\n\n/**\n * Check if array is nested/multidimensional\n *\n * @param {Array} arr array to check for nesting\n * @returns {Boolean} Boolean indicating whether array is multidimensional\n */\nexport function isMultidimensional(arr) {\n  return arr.filter(Array.isArray).length !== 0;\n}\n\n/**\n * Get maximum number of spendable points for a talent\n *\n * @param {Array} talentValues array of values for a given talent\n * @returns {Number} Number of maximum spendable points\n */\nexport function getMaxTalentCount(talentValues) {\n  let max;\n  if (!isMultidimensional(talentValues)) {\n    max = talentValues.length;\n  } else {\n    // All multidimensional arrays should be same length (checked by unit test)\n    max = talentValues[0].length;\n  }\n  return max;\n}\n\n/**\n * Replace talent text placeholders (e.g. `${1}`) with selected values\n *\n * @param {string} text Full talent text\n * @param {Array} talentValues Array (or multidimensional array) of values for the talent\n * @param {Number} replacementIdx Index of the value to use as replacement\n * @returns {string} Talent text with placeholders replaced\n */\nexport function replaceTalentText(text, talentValues, replacementIdx) {\n  let newText = text;\n\n  if (isMultidimensional(talentValues)) {\n    for (let i = 0; i < talentValues.length; i++) {\n      let re = new RegExp(`\\\\$\\\\{${i + 1}\\\\}`, 'g');\n      newText = newText.replace(re, talentValues[i][replacementIdx]);\n    }\n  } else {\n    newText = newText.replace(/\\$\\{1\\}/g, talentValues[replacementIdx]);\n  }\n\n  return newText;\n}\n\n/**\n * Get the full name of a talent tree (e.g. Skill, Garrison). The name\n * depends on the tree color and the selected commander\n *\n * @param {string} color Color of the tree to retrieve the name for\n * @param {string} commander Name of the commander\n * @returns {string} full tree name\n */\nexport function getTreeName(color, commander) {\n  const commanderData = Commanders[commander];\n  if (commanderData) {\n    return commanderData[color];\n  }\n}\n\n/**\n * Recursively find all incomplete prereqs for a talent node\n *\n * @param {Number} id ID of the talent node\n * @param {Number[]} values Array of selected values for the tree\n * @param {Object} treeData Full data for the talent tree of interest\n * @param {Array} acc Accumulator for all prereq talent IDs\n * @returns {Array} Array of IDs for all prereq talents\n */\nexport function getIncompletePrereqs(id, values, treeData, acc) {\n  for (let prereq of treeData[id].prereq) {\n    const nodeValue = values[prereq - 1];\n    const nodeMax = getMaxTalentCount(treeData[prereq].values);\n    if (nodeValue < nodeMax) {\n      acc.push(prereq);\n    }\n    getIncompletePrereqs(prereq, values, treeData, acc);\n  }\n  return acc;\n}\n\n/**\n * Set the window title with commander name and talents spent in each tree\n *\n * @param {string} commander Full name of the commander\n * @param {Number[]} r Array of red tree values\n * @param {Number[]} y Array of yellow tree values\n * @param {Number[]} b Array of blue tree values\n * @param {string} [sep='/'] Separator to use between point totals\n */\nexport function setTitle(commander, r, y, b, sep = '/') {\n  const newTitle = `${createSummaryString(commander, r, y, b, sep)} | ${title}`;\n  document.title = newTitle;\n}\n\n/**\n * Create a string with commander name and talents spent in each tree\n *\n * @param {string} commander Full name of the commander\n * @param {Number[]} r Array of red tree values\n * @param {Number[]} y Array of yellow tree values\n * @param {Number[]} b Array of blue tree values\n * @param {string} [sep='/'] Separator to use between point totals\n * @returns {string} String summarizing the commander and points spent\n */\nexport function createSummaryString(commander, r, y, b, sep = '/') {\n  const rSpent = sumArray(r);\n  const ySpent = sumArray(y);\n  const bSpent = sumArray(b);\n  const name = Commanders[commander].shortName || commander;\n  return `${name} (${rSpent}${sep}${ySpent}${sep}${bSpent})`;\n}\n\n/**\n * Get current talent URL\n *\n * @param {Boolean} embed Should returned URL be embeddable?\n * @returns {String} Current/embeddable URL\n */\nexport function getURL(embed = false) {\n  if (embed) {\n    return `${window.location.origin}/${window.location.search.replace(\n      '?',\n      '?embed;'\n    )}`;\n  } else {\n    if (isEmbed(window.location.search)) {\n      return `${window.location.origin}/${window.location.search.replace(\n        '?embed;',\n        '?'\n      )}`;\n    } else {\n      return `${window.location.origin}/${window.location.search}`;\n    }\n  }\n}\n\n/**\n * Check whether app is launched in embed mode\n *\n * @param {String} path URL path to check for embed\n * @returns {Boolean} Whether URL path contains an embed directive\n */\nexport function isEmbed(path) {\n  return path.includes('embed') ? true : false;\n}\n\n/**\n * Detect if device is touch enabled\n *\n * @returns {Boolean} Whether device is touch or not\n */\nexport function isTouchDevice() {\n  if (window.matchMedia('(pointer: coarse)').matches) {\n    return true;\n  } else {\n    return false;\n  }\n}\n\n/**\n * Check whether user is new or returning\n *\n * @returns {Boolean} Whether user is new or returning\n */\nexport function isNewUser() {\n  if (\n    !localStorage.getItem('isNewUser') ||\n    JSON.parse(localStorage.getItem('isNewUser') === true)\n  ) {\n    return true;\n  } else {\n    return false;\n  }\n}\n\n/**\n * Check whether release is an upgrade. Ignores hotfix/patch releases\n *\n * @param {String} oldVer SemVer string of old version\n * @param {String} newVer SemVer string of new version\n * @returns {Boolean} Whether newVer is an upgrade\n */\nexport function isUpgrade(oldVer, newVer) {\n  // New users are never considered upgrades\n  if (isNewUser()) {\n    return false;\n  }\n\n  const [oldMajor, oldMinor] = oldVer.split('.').map(Number);\n  const [newMajor, newMinor] = newVer.split('.').map(Number);\n\n  if (newMajor > oldMajor || newMinor > oldMinor) {\n    return true;\n  } else {\n    return false;\n  }\n}\n\n/**\n * Encode/compress the passed text\n *\n * @param {string} text Text to be encoded/compressed\n * @returns {string} Encoded/compressed version of the text\n */\nexport function encode(text) {\n  const encoded = text\n    .match(/(..?)/g)\n    .map(v => {\n      return valuesToLetters.hasOwnProperty(v) ? valuesToLetters[v] : v;\n    })\n    .join('');\n\n  return encoded;\n}\n\n/**\n * Decode encoded text\n *\n * @param {string} encoded Encoded form of the text\n * @returns {string} Decoded string\n */\nexport function decode(encoded) {\n  const decoded = encoded\n    .split('')\n    .map(k => {\n      return lettersToValues.hasOwnProperty(k) ? lettersToValues[k] : k;\n    })\n    .join('');\n\n  return decoded;\n}\n\nexport default {\n  sumArray,\n  arraysEqual,\n  arrayAllUnique,\n  isMultidimensional,\n  getMaxTalentCount,\n  replaceTalentText,\n  setTitle,\n  createSummaryString,\n  getURL,\n  isEmbed,\n  isTouchDevice,\n  isNewUser,\n  isUpgrade,\n  encode,\n  decode\n};\n","/** Maximum number of talent points available in the game */\nexport const maxPoints = 74;\n\n/**\n * Get default state values for new application instance. Also checks\n * local storage for saved settings values\n *\n * @param {Number} dataVersion Data version number to use\n * @param {Boolean} isEmbed Is app in embed mode?\n * @returns {object} Object containing blank state values\n */\nexport function getEmptyState(dataVersion, isEmbed) {\n  let storage;\n\n  if (isEmbed) {\n    // Set default settings for embedded mode\n    storage = {\n      nodeSize: 'L',\n      isShownInfoPanel: false,\n      isShownValues: true,\n      isShownTotals: true,\n      isScreenshotStats: false,\n      isSpeedMode: false,\n      isInstantZero: false,\n      isInstantMax: false,\n      isAutoFill: false,\n      isShownMouseXY: false,\n      isShownTalentID: false\n    };\n  } else {\n    // Get/set default settings for regular mode\n    const isShownInfoPanel = JSON.parse(\n      localStorage.getItem('isShownInfoPanel')\n    );\n    const isShownValues = JSON.parse(localStorage.getItem('isShownValues'));\n    const isShownTotals = JSON.parse(localStorage.getItem('isShownTotals'));\n    const isScreenshotStats = JSON.parse(\n      localStorage.getItem('isScreenshotStats')\n    );\n    const isSpeedMode = JSON.parse(localStorage.getItem('isSpeedMode'));\n    const isInstantZero = JSON.parse(localStorage.getItem('isInstantZero'));\n    const isInstantMax = JSON.parse(localStorage.getItem('isInstantMax'));\n    const isAutoFill = JSON.parse(localStorage.getItem('isAutoFill'));\n    const isShownMouseXY = JSON.parse(localStorage.getItem('isShownMouseXY'));\n    const isShownTalentID = JSON.parse(localStorage.getItem('isShownTalentID'));\n\n    // Default values\n    storage = {\n      nodeSize: localStorage.getItem('nodeSize') || 'M',\n      isShownInfoPanel: isShownInfoPanel === null ? true : isShownInfoPanel,\n      isShownValues: isShownValues === null ? true : isShownValues,\n      isShownTotals: isShownTotals === null ? true : isShownTotals,\n      isScreenshotStats: isScreenshotStats === null ? false : isScreenshotStats,\n      isSpeedMode: isSpeedMode === null ? false : isSpeedMode,\n      isInstantZero: isInstantZero === null ? false : isInstantZero,\n      isInstantMax: isInstantMax === null ? false : isInstantMax,\n      isAutoFill: isAutoFill === null ? false : isAutoFill,\n      isShownMouseXY: isShownMouseXY === null ? false : isShownMouseXY,\n      isShownTalentID: isShownTalentID === null ? false : isShownTalentID\n    };\n  }\n\n  return {\n    showProgress: true,\n    dataVersion: dataVersion,\n    commander: '',\n    red: [],\n    yellow: [],\n    blue: [],\n    ...storage\n  };\n}\n\n/** Mapping value pairs to letters for encoding */\nexport const valuesToLetters = {\n  '00': 'a',\n  '01': 'b',\n  '02': 'c',\n  '03': 'd',\n  '04': 'e',\n  '10': 'f',\n  '11': 'g',\n  '12': 'h',\n  '13': 'i',\n  '14': 'j',\n  '20': 'k',\n  '21': 'l',\n  '22': 'm',\n  '23': 'n',\n  '24': 'o',\n  '30': 'p',\n  '31': 'q',\n  '32': 'r',\n  '33': 's',\n  '34': 't',\n  '35': 'u',\n  '40': 'v',\n  '41': 'w',\n  '42': 'x',\n  '43': 'y',\n  '44': 'z'\n};\n\n/** Mapping letters to value pairs for decoding */\nexport const lettersToValues = {\n  a: '00',\n  b: '01',\n  c: '02',\n  d: '03',\n  e: '04',\n  f: '10',\n  g: '11',\n  h: '12',\n  i: '13',\n  j: '14',\n  k: '20',\n  l: '21',\n  m: '22',\n  n: '23',\n  o: '24',\n  p: '30',\n  q: '31',\n  r: '32',\n  s: '33',\n  t: '34',\n  u: '35',\n  v: '40',\n  w: '41',\n  x: '42',\n  y: '43',\n  z: '44'\n};\n","import React, { Component } from 'react';\n\nclass ErrorBoundary extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { error: null, errorInfo: null };\n  }\n\n  componentDidCatch(error, errorInfo) {\n    // Catch errors in any components below and re-render with error\n    this.setState({\n      error: error,\n      errorInfo: errorInfo\n    });\n  }\n\n  render() {\n    if (this.state.errorInfo) {\n      // Error path\n      return (\n        <div>\n          <h3>Something broke!</h3>\n          <details style={{ whiteSpace: 'pre-wrap' }}>\n            {this.state.error && this.state.error.toString()}\n            <br />\n            {this.state.errorInfo.componentStack}\n          </details>\n        </div>\n      );\n    }\n\n    return this.props.children;\n  }\n}\n\nexport default ErrorBoundary;\n","var map = {\n\t\"./1_2\": [\n\t\t110,\n\t\t0\n\t],\n\t\"./1_2.js\": [\n\t\t110,\n\t\t0\n\t],\n\t\"./1_3\": [\n\t\t111,\n\t\t1\n\t],\n\t\"./1_3.js\": [\n\t\t111,\n\t\t1\n\t],\n\t\"./1_4\": [\n\t\t112,\n\t\t2\n\t],\n\t\"./1_4.js\": [\n\t\t112,\n\t\t2\n\t],\n\t\"./1_5\": [\n\t\t113,\n\t\t3\n\t],\n\t\"./1_5.js\": [\n\t\t113,\n\t\t3\n\t],\n\t\"./1_6\": [\n\t\t114,\n\t\t4\n\t],\n\t\"./1_6.js\": [\n\t\t114,\n\t\t4\n\t],\n\t\"./1_7\": [\n\t\t115,\n\t\t5\n\t],\n\t\"./1_7.js\": [\n\t\t115,\n\t\t5\n\t],\n\t\"./1_8\": [\n\t\t116,\n\t\t6\n\t],\n\t\"./1_8.js\": [\n\t\t116,\n\t\t6\n\t],\n\t\"./1_9\": [\n\t\t117,\n\t\t7\n\t],\n\t\"./1_9.js\": [\n\t\t117,\n\t\t7\n\t],\n\t\"./2_0\": [\n\t\t118,\n\t\t8\n\t],\n\t\"./2_0.js\": [\n\t\t118,\n\t\t8\n\t],\n\t\"./2_1\": [\n\t\t119,\n\t\t9\n\t],\n\t\"./2_1.js\": [\n\t\t119,\n\t\t9\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 140;\nmodule.exports = webpackAsyncContext;","var map = {\n\t\"./v1/Attack.json\": 150\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 149;","var map = {\n\t\"./v1/Archer.json\": 152\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 151;","var map = {\n\t\"./v1/Cavalry.json\": 154\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 153;","var map = {\n\t\"./v1/Conquering.json\": 156\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 155;","var map = {\n\t\"./v1/Defense.json\": 158\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 157;","var map = {\n\t\"./v1/Garrison.json\": 160\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 159;","var map = {\n\t\"./v1/Gathering.json\": 162\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 161;","var map = {\n\t\"./v1/Infantry.json\": 164\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 163;","var map = {\n\t\"./v1/Integration.json\": 166\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 165;","var map = {\n\t\"./v1/Leadership.json\": 168\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 167;","var map = {\n\t\"./v1/Mobility.json\": 170\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 169;","var map = {\n\t\"./v1/Peacekeeping.json\": 172\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 171;","var map = {\n\t\"./v1/Skill.json\": 174\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 173;","var map = {\n\t\"./v1/Support.json\": 176\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 175;","var map = {\n\t\"./v1/Versatility.json\": 178\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 177;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport { withNProgress } from '@tanem/react-nprogress';\n\nconst Progress = ({ isFinished, progress, animationDuration }) => (\n  <Container isFinished={isFinished} animationDuration={animationDuration}>\n    <Bar progress={progress} animationDuration={animationDuration} />\n  </Container>\n);\n\nconst Container = ({ children, isFinished, animationDuration }) => (\n  <div\n    style={{\n      opacity: isFinished ? 0 : 1,\n      pointerEvents: 'none',\n      transition: `opacity ${animationDuration}ms linear`\n    }}\n  >\n    {children}\n  </div>\n);\n\nconst Bar = ({ progress, animationDuration }) => (\n  <div\n    style={{\n      background: '#29d',\n      height: 2,\n      left: 0,\n      marginLeft: `${(-1 + progress) * 100}%`,\n      position: 'fixed',\n      top: 0,\n      transition: `margin-left ${animationDuration}ms linear`,\n      width: '100%',\n      zIndex: 1031\n    }}\n  >\n    <div\n      style={{\n        boxShadow: '0 0 10px #29d, 0 0 5px #29d',\n        display: 'block',\n        height: '100%',\n        opacity: 1,\n        position: 'absolute',\n        right: 0,\n        transform: 'rotate(3deg) translate(0px, -4px)',\n        width: 100\n      }}\n    />\n  </div>\n);\n\nexport default withNProgress(Progress);\n","import React, { Component } from 'react';\nimport Joyride, { ACTIONS, EVENTS, STATUS } from 'react-joyride';\nimport { isNewUser } from './utils';\n\n/**\n * Component containing the guided tour for app onboarding\n *\n * @class GuidedTour\n * @extends {Component}\n */\nclass GuidedTour extends Component {\n  constructor(props: Props) {\n    super(props);\n\n    this.state = {\n      run: isNewUser() ? true : false,\n      stepIndex: 0,\n      steps: [\n        {\n          content: 'Select your commander using this dropdown',\n          target: '#select-commander',\n          placement: 'auto',\n          disableBeacon: true\n        },\n        {\n          content:\n            'View guides for the selected commander and check the number of points you have left to spend',\n          target: '#summary-panel',\n          placement: 'auto'\n        },\n        {\n          content: 'Check various stats given by your talent build',\n          target: '#stats-panel',\n          placement: 'auto'\n        },\n        {\n          content:\n            'Reset your talent build. This will delete all assigned talent points',\n          target: '#button-reset',\n          placement: 'auto'\n        },\n        {\n          content:\n            'Save a screenshot of your current talent build. No need to settle for those blurry in-game screenshots anymore!',\n          target: '#button-screenshot',\n          placement: 'auto'\n        },\n        {\n          content:\n            'Talent builds can be shared with a link. Click this to get your shareable link, or simply copy your current URL',\n          target: '#button-share',\n          placement: 'auto'\n        },\n        {\n          content:\n            'Change display settings, or activate additional functionality like Speed Mode',\n          target: '#select-settings'\n        },\n        {\n          content:\n            'Get additional info about the app. You can also restart the guided tour here',\n          target: '#nav-icon',\n          locale: { last: 'Finish' }\n        }\n      ]\n    };\n  }\n\n  /**\n   * Restart the guided tour by resetting the current tour step\n   *\n   * @memberof GuidedTour\n   */\n  restartTour = () => {\n    this.setState({\n      run: true,\n      stepIndex: 0\n    });\n  };\n\n  /**\n   * Handle tour events (next step, tour close etc)\n   *\n   * @memberof GuidedTour\n   */\n  handleJoyrideCallback = data => {\n    const { action, index, status, type } = data;\n\n    if ([STATUS.FINISHED, STATUS.SKIPPED].includes(status)) {\n      // Need to set our running state to false, so we can restart if we click start again.\n      this.setState({ run: false, stepIndex: 0 });\n    } else if (action === ACTIONS.CLOSE) {\n      this.setState({ run: false, stepIndex: 0 });\n    } else if (type === EVENTS.STEP_AFTER || type === EVENTS.TARGET_NOT_FOUND) {\n      // Update state to advance the tour\n      this.setState({ stepIndex: index + (action === ACTIONS.PREV ? -1 : 1) });\n    }\n  };\n\n  render() {\n    return (\n      <Joyride\n        run={this.state.run}\n        callback={this.handleJoyrideCallback}\n        stepIndex={this.state.stepIndex}\n        steps={this.state.steps}\n        continuous={true}\n        showProgress={true}\n        showSkipButton={false}\n        disableOverlayClose={true}\n        styles={{\n          options: {\n            primaryColor: 'var(--color-highlight)',\n            overlayColor: 'rgba(0, 0, 0, 0.6)'\n          }\n        }}\n      />\n    );\n  }\n}\n\nexport default GuidedTour;\n","import React, { useState } from 'react';\nimport ReactGA from 'react-ga';\nimport Button from 'react-bootstrap/Button';\nimport Spinner from 'react-bootstrap/Spinner';\nimport domtoimage from 'dom-to-image';\nimport {\n  faTrashAlt,\n  faCamera,\n  faShareAlt,\n} from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { createSummaryString } from './utils';\n\nimport './styles/NavBarButtons.css';\n\n/**\n * Nav bar component containing main buttons\n *\n */\nconst NavBarButtons = (props) => {\n  const [isDownloading, setIsDownloading] = useState(false);\n\n  /**\n   * Take a screenshot of the talent tree, add banner, and download\n   *\n   * @param {boolean} [addBanner=true] Should a logo/banner be rendered?\n   * @memberof NavBarButtons\n   */\n  const takeScreenshot = (elementID, addBanner = true) => {\n    ReactGA.event({\n      category: 'App',\n      action: 'Screenshot',\n      label: props.commander,\n    });\n\n    setIsDownloading(true);\n    const dpr = window.devicePixelRatio || 1;\n    const node = document.getElementById(elementID);\n\n    if (addBanner) {\n      document.getElementById('banner').style.visibility = 'visible';\n    }\n\n    domtoimage\n      .toJpeg(node, {\n        height: node.offsetHeight * dpr,\n        width: node.offsetWidth * dpr,\n        style: {\n          transform: 'scale(' + dpr + ')',\n          transformOrigin: 'top left',\n          width: node.offsetWidth + 'px',\n          height: node.offsetHeight + 'px',\n        },\n      })\n      .then((dataUrl) => {\n        const link = document.createElement('a');\n        link.href = dataUrl;\n        link.download = `${createSummaryString(\n          props.commander,\n          props.red,\n          props.yellow,\n          props.blue,\n          '-'\n        )}.jpeg`;\n        link.click();\n\n        document.getElementById('banner').style.visibility = 'hidden';\n        setIsDownloading(false);\n      });\n  };\n\n  return (\n    <form className=\"form-inline\">\n      <Button\n        id=\"button-reset\"\n        data-testid=\"button-reset\"\n        variant=\"danger\"\n        size=\"sm\"\n        disabled={props.commander | props.calcPointsSpent() ? false : true}\n        onClick={() => props.showReset()}\n      >\n        <FontAwesomeIcon icon={faTrashAlt} />\n        <span className=\"nav-button-text\">Reset</span>\n      </Button>\n\n      <Button\n        id=\"button-screenshot\"\n        data-testid=\"button-screenshot\"\n        variant=\"primary\"\n        size=\"sm\"\n        disabled={props.commander | props.calcPointsSpent() ? false : true}\n        onClick={() => {\n          const elementID = props.isScreenshotStats\n            ? 'main-container'\n            : 'tree-panel';\n          takeScreenshot(elementID);\n        }}\n      >\n        {isDownloading ? (\n          <Spinner size=\"sm\" animation=\"border\" variant=\"light\" />\n        ) : (\n          <FontAwesomeIcon icon={faCamera} />\n        )}\n        <span className=\"nav-button-text\">Screenshot</span>\n      </Button>\n\n      <Button\n        id=\"button-share\"\n        data-testid=\"button-share\"\n        variant=\"success\"\n        size=\"sm\"\n        disabled={props.commander | props.calcPointsSpent() ? false : true}\n        onClick={() => props.showShare()}\n      >\n        <FontAwesomeIcon icon={faShareAlt} />\n        <span className=\"nav-button-text\">Share</span>\n      </Button>\n    </form>\n  );\n};\n\nexport default NavBarButtons;\n","import React from 'react';\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\nimport Tooltip from 'react-bootstrap/Tooltip';\nimport { faQuestionCircle } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport './styles/Tooltips.css';\n\n/**\n * Tooltip showing a hoverable 'help' tooltip\n *\n * @returns {Tooltip} Tooltip\n */\nexport const HelpTooltip = props => {\n  return (\n    <OverlayTrigger\n      placement=\"top\"\n      flip={true}\n      trigger={['hover', 'click']}\n      overlay={<Tooltip className=\"help-text\">{props.tooltip}</Tooltip>}\n    >\n      <FontAwesomeIcon icon={faQuestionCircle} className=\"help-icon\" />\n    </OverlayTrigger>\n  );\n};\n\n/**\n * General tooltip component\n *\n * @returns {Tooltip} Tooltip\n */\nexport const GeneralTooltip = props => {\n  return (\n    <OverlayTrigger\n      placement=\"top\"\n      flip={true}\n      trigger={['hover', 'click']}\n      overlay={<Tooltip className=\"help-text\">{props.tooltip}</Tooltip>}\n    >\n      {props.children}\n    </OverlayTrigger>\n  );\n};\n\nexport default { HelpTooltip, GeneralTooltip };\n","import React from 'react';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport NavItem from 'react-bootstrap/NavItem';\nimport NavLink from 'react-bootstrap/NavLink';\nimport Form from 'react-bootstrap/Form';\nimport ToggleButton from 'react-bootstrap/ToggleButton';\nimport ToggleButtonGroup from 'react-bootstrap/ToggleButtonGroup';\nimport { faCog } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { HelpTooltip } from './Tooltips';\n\nimport './styles/NavBarSettings.css';\n\nconst NavBarSettings = props => {\n  return (\n    <Dropdown alignRight as={NavItem} id=\"select-settings\">\n      <Dropdown.Toggle as={NavLink} data-testid=\"select-settings\">\n        <FontAwesomeIcon icon={faCog} />\n        <span className=\"nav-button-text\">Settings</span>\n      </Dropdown.Toggle>\n\n      <Dropdown.Menu id=\"settings-menu\" className=\"nav-menu\">\n        <Form>\n          <Form.Group id=\"settings-group\">\n            <Dropdown.Header>Display</Dropdown.Header>\n            <Form.Check\n              type=\"switch\"\n              id=\"settings-info-panel\"\n              data-testid=\"settings-info-panel\"\n              label=\"Info panel\"\n              checked={props.isShownInfoPanel}\n              onChange={e => props.toggleInfoPanel()}\n            />\n            <Form.Check\n              type=\"switch\"\n              id=\"settings-values\"\n              data-testid=\"settings-values\"\n              label=\"Node values\"\n              checked={props.isShownValues}\n              onChange={e => props.toggleValueDisplay()}\n            />\n            <Form.Check\n              type=\"switch\"\n              id=\"settings-totals\"\n              data-testid=\"settings-totals\"\n              label=\"Total spent\"\n              checked={props.isShownTotals}\n              onChange={e => props.toggleTotalDisplay()}\n            />\n\n            <Dropdown.Divider />\n\n            <Dropdown.Header>Node Size</Dropdown.Header>\n            <div className=\"d-flex flex-column\">\n              <ToggleButtonGroup\n                name=\"size\"\n                size=\"sm\"\n                value={props.nodeSize}\n                onChange={val => {\n                  props.toggleNodeSize(val);\n                }}\n              >\n                <ToggleButton\n                  type=\"radio\"\n                  name=\"radio\"\n                  value=\"S\"\n                  variant=\"outline-primary\"\n                >\n                  S\n                </ToggleButton>\n                <ToggleButton\n                  type=\"radio\"\n                  name=\"radio\"\n                  value=\"M\"\n                  variant=\"outline-primary\"\n                >\n                  M\n                </ToggleButton>\n                <ToggleButton\n                  type=\"radio\"\n                  name=\"radio\"\n                  value=\"L\"\n                  variant=\"outline-primary\"\n                >\n                  L\n                </ToggleButton>\n              </ToggleButtonGroup>\n\n              <Dropdown.Divider />\n              <Dropdown.Header>Screenshot</Dropdown.Header>\n              <Form.Check\n                type=\"switch\"\n                id=\"settings-screenshot-stats\"\n                label=\"Include stats\"\n                checked={props.isScreenshotStats}\n                onChange={e => props.toggleScreenshotStats()}\n              />\n\n              <Dropdown.Divider />\n              <Dropdown.Header>Expert</Dropdown.Header>\n              <div className=\"help-wrapper\">\n                <Form.Check\n                  type=\"switch\"\n                  id=\"settings-speed-mode\"\n                  label=\"Speed mode\"\n                  checked={props.isSpeedMode}\n                  onChange={e => props.toggleSpeedMode()}\n                />\n                <HelpTooltip\n                  tooltip=\"No tooltips. Left/right click nodes directly to assign/remove\n            points\"\n                />\n              </div>\n              <div className=\"help-wrapper\">\n                <Form.Check\n                  type=\"switch\"\n                  id=\"settings-instant-zero\"\n                  label=\"Instant zero\"\n                  checked={props.isInstantZero}\n                  onChange={e => props.toggleInstantZero()}\n                />\n                <HelpTooltip tooltip=\"Set a single talent to zero with 1 click\" />\n              </div>\n              <div className=\"help-wrapper\">\n                <Form.Check\n                  type=\"switch\"\n                  id=\"settings-instant-max\"\n                  label=\"Instant max\"\n                  checked={props.isInstantMax}\n                  onChange={e => props.toggleInstantMax()}\n                />\n                <HelpTooltip tooltip=\"Max a single talent with 1 click\" />\n              </div>\n              <div className=\"help-wrapper\">\n                <Form.Check\n                  type=\"switch\"\n                  id=\"settings-auto-fill\"\n                  label=\"Auto fill\"\n                  checked={props.isAutoFill}\n                  onChange={e => props.toggleAutoFill()}\n                />\n                <HelpTooltip tooltip=\"Automatically fill all prerequisites for a talent\" />\n              </div>\n            </div>\n\n            {process.env.NODE_ENV === 'development' && (\n              <>\n                <Dropdown.Divider />\n                <Dropdown.Header>Dev Mode</Dropdown.Header>\n                <Form.Check\n                  type=\"switch\"\n                  id=\"settings-mouse\"\n                  data-testid=\"settings-mouse\"\n                  label=\"Show mouse XY\"\n                  checked={props.isShownMouseXY}\n                  onChange={e => props.toggleMouseXY()}\n                />\n                <Form.Check\n                  type=\"switch\"\n                  id=\"settings-talentID\"\n                  label=\"Show talent ID\"\n                  checked={props.isShownTalentID}\n                  onChange={e => props.toggleTalentID()}\n                />\n              </>\n            )}\n          </Form.Group>\n        </Form>\n      </Dropdown.Menu>\n    </Dropdown>\n  );\n};\n\nexport default NavBarSettings;\n","import React, { Component } from 'react';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport NavItem from 'react-bootstrap/NavItem';\nimport NavLink from 'react-bootstrap/NavLink';\n\nimport Commanders from './data/commanders.json';\nimport './styles/NavBarCommander.css';\n\n/**\n * Nav bar component containing commander drop down\n *\n * @class NavBarCommander\n * @extends {Component}\n */\nclass NavBarCommander extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isOpen: false\n    };\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    if (\n      this.props.commander !== nextProps.commander ||\n      this.state.isOpen !== nextState.isOpen\n    ) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  /**\n   * Toggle open state of the commander select dropdown\n   *\n   * @memberof NavBarCommander\n   */\n  toggleSelect = () => {\n    this.setState(prevState => ({\n      isOpen: !prevState.isOpen\n    }));\n  };\n\n  /**\n   * Create a list of all available commanders (sorted)\n   *\n   * @returns {Dropdown.Item[]} Array of Dropdown items for all commanders\n   * @memberof NavBarCommander\n   */\n  createSelectItems = () => {\n    const commanderList = Object.keys(Commanders).sort();\n    let legendaryCommanders = [];\n    let epicCommanders = [];\n\n    commanderList.forEach(c => {\n      let selectItem = (\n        <Dropdown.Item\n          data-testid=\"menu-item\"\n          key={c}\n          onClick={() => {\n            this.props.changeCommander(c);\n          }}\n        >\n          <img\n            className=\"select-commander-icon\"\n            alt={c}\n            src={`${process.env.PUBLIC_URL}/images/commanders/${c}.png`}\n          ></img>\n          {Commanders[c]['shortName'] ? Commanders[c]['shortName'] : c}\n        </Dropdown.Item>\n      );\n\n      if (Commanders[c].tier === 'Legendary') {\n        legendaryCommanders.push(selectItem);\n      } else if (Commanders[c].tier === 'Epic') {\n        epicCommanders.push(selectItem);\n      }\n    });\n    return [\n      <Dropdown.Header key=\"header-legendary\">Legendary</Dropdown.Header>,\n      ...legendaryCommanders,\n      <Dropdown.Divider key=\"div1\" />,\n      <Dropdown.Header key=\"header-epic\">Epic</Dropdown.Header>,\n      ...epicCommanders\n    ];\n  };\n\n  render() {\n    return (\n      <Dropdown\n        id=\"select-commander\"\n        alignRight\n        as={NavItem}\n        show={this.state.isOpen}\n        onToggle={this.toggleSelect}\n      >\n        <Dropdown.Toggle as={NavLink} data-testid=\"select-commander\">\n          {this.props.commander ? (\n            <img\n              data-testid=\"select-commander-icon\"\n              className=\"select-commander-icon select-commander-icon-header\"\n              alt={this.props.commander}\n              src={`${process.env.PUBLIC_URL}/images/commanders/${this.props.commander}.png`}\n            ></img>\n          ) : (\n            <img\n              data-testid=\"select-commander-icon\"\n              className=\"select-commander-icon select-commander-icon-header\"\n              alt=\"Unknown commander\"\n              src={`${process.env.PUBLIC_URL}/images/commanders/unknown.png`}\n            ></img>\n          )}\n          <span className=\"nav-button-text\">\n            {this.props.commander\n              ? Commanders[this.props.commander]['shortName']\n                ? Commanders[this.props.commander]['shortName']\n                : this.props.commander\n              : ' Commander'}\n          </span>\n        </Dropdown.Toggle>\n\n        <Dropdown.Menu id=\"select-commander-menu\" className=\"nav-menu\">\n          {this.createSelectItems()}\n        </Dropdown.Menu>\n      </Dropdown>\n    );\n  }\n}\n\nexport default NavBarCommander;\n","import React, { Component, Suspense } from 'react';\nimport ReactGA from 'react-ga';\nimport Tabs from 'react-bootstrap/Tabs';\nimport Tab from 'react-bootstrap/Tab';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport {\n  faExclamationTriangle,\n  faInfoCircle,\n  faTrashAlt,\n  faShareAlt,\n  faLink,\n  faCode,\n  faCopy,\n  faBullhorn,\n} from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  TwitterShareButton,\n  WhatsappShareButton,\n  RedditShareButton,\n  WeiboShareButton,\n  PocketShareButton,\n  EmailShareButton,\n  TwitterIcon,\n  WhatsappIcon,\n  RedditIcon,\n  PocketIcon,\n  EmailIcon,\n  WeiboIcon,\n} from 'react-share';\n\nimport {\n  title,\n  donate,\n  author,\n  contributors,\n  bugs,\n  version,\n} from '../package.json';\nimport { getURL } from './utils';\nimport './styles/Modals.css';\n\n/**\n * Modal displaying warning about an invalid build retrived from URL\n *\n * @class InvalidBuildModal\n * @extends {Component}\n */\nexport class InvalidBuildModal extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      modal: true,\n    };\n  }\n\n  toggle = () => {\n    this.setState((prevState) => ({\n      modal: !prevState.modal,\n    }));\n  };\n\n  render() {\n    return (\n      <Modal centered show={this.state.modal} onHide={this.toggle}>\n        <Modal.Header closeButton>\n          <span>\n            <FontAwesomeIcon\n              icon={faExclamationTriangle}\n              className=\"modal-icon\"\n            />\n          </span>\n          Invalid Talent Build\n        </Modal.Header>\n        <Modal.Body className=\"modal-body\">\n          <div>\n            The talent build you're trying to view is invalid. Make sure you've\n            copied and pasted the link correctly.\n            <br />\n            <br />\n          </div>\n          <div data-testid=\"invalid-modal-body\">\n            <b>Reason:</b> {this.props.message}\n          </div>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"primary\" onClick={this.toggle}>\n            Close\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    );\n  }\n}\n\n/**\n * Modal displaying announcements\n *\n * @class AnnouncementModal\n * @extends {Component}\n */\nexport class AnnouncementModal extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      version: version,\n      modal:\n        this.props.isNewUser ||\n        this.props.isEmbed ||\n        !this.props.isUpgrade ||\n        this.props.isInvalidBuild\n          ? false\n          : true,\n    };\n  }\n\n  toggle = () => {\n    this.setState((prevState) => ({\n      modal: !prevState.modal,\n    }));\n  };\n\n  show = (version) => {\n    this.setState({ modal: true, version: version });\n  };\n\n  getFilenameFromVersion(version) {\n    const semVerValues = version.split('.');\n    return `${semVerValues[0]}_${semVerValues[1]}.js`;\n  }\n\n  loadAnnouncement(version) {\n    const Announcement = React.lazy(() =>\n      import(`./announcements/${this.getFilenameFromVersion(version)}`)\n    );\n    return Announcement;\n  }\n\n  render() {\n    const Announcement = this.loadAnnouncement(this.state.version);\n\n    return (\n      <Modal\n        data-testid=\"announce-modal\"\n        centered\n        size=\"lg\"\n        show={this.state.modal}\n        onHide={this.toggle}\n      >\n        <Modal.Header closeButton>\n          <span>\n            <FontAwesomeIcon icon={faBullhorn} className=\"modal-icon\" />\n          </span>\n          Announcement\n        </Modal.Header>\n        <Modal.Body className=\"modal-body\">\n          <Suspense fallback={<div>Loading...</div>}>\n            <Announcement />\n          </Suspense>\n          <hr className=\"announce-hr\" />\n          If you have any feature requests, or notice any website issues, you\n          can make a post{' '}\n          <a href={bugs.url} target=\"_blank\" rel=\"noopener noreferrer\">\n            here\n          </a>\n          .\n        </Modal.Body>\n        <Modal.Footer>\n          <span className=\"modal-reminder\">\n            ( You can view this announcement again on the Info page\n            <FontAwesomeIcon icon={faInfoCircle} className=\"modal-icon\" />)\n          </span>\n          <Button variant=\"primary\" onClick={this.toggle}>\n            Close\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    );\n  }\n}\n\n/**\n * Modal displaying information about the application\n *\n * @class AboutModal\n * @extends {Component}\n */\nexport class AboutModal extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      modal: false,\n    };\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    if (this.state.modal !== nextState.modal) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  toggle = () => {\n    this.setState((prevState) => ({\n      modal: !prevState.modal,\n    }));\n  };\n\n  showAnnouncement = (version) => {\n    this.toggle();\n    this.props.toggleAnnounce(version);\n  };\n\n  getContributors = () => {\n    let contributorsList = contributors.map((c, i) => [\n      i > 0 && ', ',\n      <a href={c.url} target=\"_blank\" rel=\"noopener noreferrer\" key={c.name}>\n        {c.name}\n      </a>,\n    ]);\n\n    return contributorsList;\n  };\n\n  showDonate = () => {\n    ReactGA.event({\n      category: 'App',\n      action: 'Donate',\n    });\n  };\n\n  render() {\n    return (\n      <Modal centered show={this.state.modal} onHide={this.toggle}>\n        <Modal.Header closeButton>\n          <span>\n            <FontAwesomeIcon icon={faInfoCircle} className=\"modal-icon\" />\n          </span>\n          {title}\n        </Modal.Header>\n\n        <Modal.Body>\n          <Tabs defaultActiveKey=\"about\" className=\"tab-title\">\n            <Tab eventKey=\"about\" title=\"About\">\n              <div>\n                <img\n                  id=\"modal-app-icon\"\n                  src={`${process.env.PUBLIC_URL}/logo.svg`}\n                  alt=\"RoK Talents Logo\"\n                ></img>\n                Talent builder for Rise of Kingdoms. Best viewed on PC/laptop.\n              </div>\n              <br />\n              <div>\n                <span className=\"about-label\">App version:</span> {version}\n              </div>\n              <div>\n                <span className=\"about-label\">Creator:</span> {author.name}\n              </div>\n              <div>\n                <span className=\"about-label\">Contributors:</span>{' '}\n                {this.getContributors()}\n              </div>\n              <div>\n                <span className=\"about-label\">Report bug:</span>{' '}\n                <a href={bugs.url} target=\"_blank\" rel=\"noopener noreferrer\">\n                  Submit\n                </a>\n              </div>\n              <div>\n                <span className=\"about-label\">Donate:</span>{' '}\n                <a href={donate} target=\"_blank\" rel=\"noopener noreferrer\">\n                  <img\n                    id=\"coffee\"\n                    src=\"https://cdn.buymeacoffee.com/buttons/default-orange.png\"\n                    alt=\"Buy Me A Coffee\"\n                    onClick={this.showDonate}\n                  ></img>\n                </a>\n              </div>\n            </Tab>\n\n            <Tab eventKey=\"releases\" title=\"Releases\">\n              <Button\n                className=\"button-releases\"\n                variant=\"success\"\n                size=\"sm\"\n                onClick={() => {\n                  this.showAnnouncement(version);\n                }}\n              >\n                View latest release\n              </Button>\n              <hr />\n              <h2>Release History</h2>\n              <Button\n                className=\"button-releases-history\"\n                variant=\"primary\"\n                size=\"sm\"\n                onClick={() => {\n                  this.showAnnouncement('2.1.0');\n                }}\n              >\n                2.1.0\n              </Button>\n              <Button\n                className=\"button-releases-history\"\n                variant=\"primary\"\n                size=\"sm\"\n                onClick={() => {\n                  this.showAnnouncement('2.0.0');\n                }}\n              >\n                2.0.0\n              </Button>\n              <Button\n                className=\"button-releases-history\"\n                variant=\"primary\"\n                size=\"sm\"\n                onClick={() => {\n                  this.showAnnouncement('1.9.0');\n                }}\n              >\n                1.9.0\n              </Button>\n              <Button\n                className=\"button-releases-history\"\n                variant=\"primary\"\n                size=\"sm\"\n                onClick={() => {\n                  this.showAnnouncement('1.8.0');\n                }}\n              >\n                1.8.0\n              </Button>\n              <Button\n                className=\"button-releases-history\"\n                variant=\"primary\"\n                size=\"sm\"\n                onClick={() => {\n                  this.showAnnouncement('1.7.0');\n                }}\n              >\n                1.7.0\n              </Button>\n              <Button\n                className=\"button-releases-history\"\n                variant=\"primary\"\n                size=\"sm\"\n                onClick={() => {\n                  this.showAnnouncement('1.6.0');\n                }}\n              >\n                1.6.0\n              </Button>\n              <Button\n                className=\"button-releases-history\"\n                variant=\"primary\"\n                size=\"sm\"\n                onClick={() => {\n                  this.showAnnouncement('1.5.0');\n                }}\n              >\n                1.5.0\n              </Button>\n              <Button\n                className=\"button-releases-history\"\n                variant=\"primary\"\n                size=\"sm\"\n                onClick={() => {\n                  this.showAnnouncement('1.4.0');\n                }}\n              >\n                1.4.0\n              </Button>\n              <Button\n                className=\"button-releases-history\"\n                variant=\"primary\"\n                size=\"sm\"\n                onClick={() => {\n                  this.showAnnouncement('1.3.0');\n                }}\n              >\n                1.3.0\n              </Button>\n              <Button\n                className=\"button-releases-history\"\n                variant=\"primary\"\n                size=\"sm\"\n                onClick={() => {\n                  this.showAnnouncement('1.2.0');\n                }}\n              >\n                1.2.0\n              </Button>\n            </Tab>\n\n            <Tab eventKey=\"instructions\" title=\"Instructions\">\n              <ol>\n                <li>Choose commander in the top-right dropdown list</li>\n                <li>Assign points by clicking on talent nodes</li>\n                <li>Check your build stats in the Stats panel</li>\n                <li>\n                  Click the Share button to get a{' '}\n                  <strong>shareable link</strong> to your build\n                </li>\n              </ol>\n\n              <Button\n                id=\"button-tour\"\n                variant=\"success\"\n                size=\"sm\"\n                onClick={() => {\n                  this.toggle();\n                  this.props.toggleTour();\n                }}\n              >\n                Show Guided Tour\n              </Button>\n\n              <br />\n              <div>\n                Video guide:{' '}\n                <a\n                  href=\"https://www.youtube.com/watch?v=jBv_BZXjFgM\"\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                >\n                  Legend Rhony\n                </a>\n              </div>\n            </Tab>\n          </Tabs>\n        </Modal.Body>\n      </Modal>\n    );\n  }\n}\n\n/**\n * Modal displaying reset/delete confirmation\n *\n * @class ResetModal\n * @extends {Component}\n */\nexport class ResetModal extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      modal: false,\n    };\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    if (this.state.modal !== nextState.modal) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  toggle = () => {\n    this.setState((prevState) => ({\n      modal: !prevState.modal,\n    }));\n  };\n\n  render() {\n    return (\n      <Modal centered show={this.state.modal} onHide={this.toggle}>\n        <Modal.Header closeButton>\n          <span>\n            <FontAwesomeIcon icon={faTrashAlt} className=\"modal-icon\" />\n          </span>\n          Reset\n        </Modal.Header>\n\n        <Modal.Body className=\"modal-body\">\n          <div>Are you sure you want to reset the talent build?</div>\n          <div>This will remove all assigned talent points.</div>\n        </Modal.Body>\n\n        <Modal.Footer>\n          <Button\n            variant=\"danger\"\n            onClick={() => {\n              this.props.resetTalents();\n              this.toggle();\n            }}\n          >\n            Reset\n          </Button>\n          <Button variant=\"secondary\" onClick={this.toggle}>\n            Cancel\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    );\n  }\n}\n\n/**\n * Modal displaying sharing options for talent build\n *\n * @class ShareModal\n * @extends {Component}\n */\nexport class ShareModal extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      modal: false,\n    };\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    if (this.state.modal !== nextState.modal) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  toggle = () => {\n    this.setState((prevState) => ({\n      modal: !prevState.modal,\n    }));\n  };\n\n  copyURL = () => {\n    const input = document.getElementById('url');\n    input.readOnly = true;\n    input.select();\n    document.execCommand('copy');\n    document.getElementById('copyButton').innerHTML = '\\u2713';\n    ReactGA.event({\n      category: 'Share',\n      action: 'Copy URL',\n    });\n  };\n\n  copyEmbedURL = () => {\n    const input = document.getElementById('url-embed');\n    input.readOnly = true;\n    input.select();\n    document.execCommand('copy');\n    document.getElementById('copyEmbedButton').innerHTML = '\\u2713';\n    ReactGA.event({\n      category: 'Share',\n      action: 'Copy Embed URL',\n    });\n  };\n\n  shareSocial = () => {\n    ReactGA.event({\n      category: 'Share',\n      action: 'Share social media',\n    });\n  };\n\n  render() {\n    return (\n      <Modal centered show={this.state.modal} onHide={this.toggle}>\n        <Modal.Header closeButton>\n          <span>\n            <FontAwesomeIcon icon={faShareAlt} className=\"modal-icon\" />\n          </span>\n          Share Talent Build\n        </Modal.Header>\n\n        <Modal.Body>\n          <Tabs defaultActiveKey=\"link\" className=\"tab-title\">\n            <Tab eventKey=\"link\" title=\"Link\">\n              <div className=\"share-modal-label\">\n                Shareable link to this talent build:\n              </div>\n\n              <div className=\"input-group mb-3\">\n                <div className=\"input-group-prepend\">\n                  <span className=\"input-group-text\">\n                    <FontAwesomeIcon icon={faLink} />\n                  </span>\n                </div>\n                <input\n                  id=\"url\"\n                  type=\"text\"\n                  className=\"form-control\"\n                  defaultValue={getURL()}\n                  readOnly\n                ></input>\n                <div className=\"input-group-append\">\n                  <button\n                    id=\"copyButton\"\n                    className=\"btn btn-success\"\n                    type=\"button\"\n                    onClick={this.copyURL}\n                  >\n                    <FontAwesomeIcon icon={faCopy} />\n                  </button>\n                </div>\n              </div>\n\n              <hr />\n\n              <div className=\"share-modal-label\">Share to social media:</div>\n\n              <div id=\"share-modal-social\" onClick={this.shareSocial}>\n                <EmailShareButton url={window.location.href}>\n                  <EmailIcon size={32} round />\n                </EmailShareButton>\n                <RedditShareButton url={window.location.href}>\n                  <RedditIcon size={32} round />\n                </RedditShareButton>\n                <TwitterShareButton url={window.location.href}>\n                  <TwitterIcon size={32} round />\n                </TwitterShareButton>\n                <WeiboShareButton url={window.location.href}>\n                  <WeiboIcon size={32} round />\n                </WeiboShareButton>\n                <WhatsappShareButton url={window.location.href}>\n                  <WhatsappIcon size={32} round />\n                </WhatsappShareButton>\n                <PocketShareButton url={window.location.href}>\n                  <PocketIcon size={32} round />\n                </PocketShareButton>\n              </div>\n            </Tab>\n\n            <Tab eventKey=\"embed\" title=\"Embed\">\n              <div>\n                If you have a blog or website, you can use the{' '}\n                <strong>HTML</strong> code below to embed this talent build\n                directly into your site.\n              </div>\n              <div>\n                <strong>Note</strong>: The embedded talent build will be\n                view-only.\n              </div>\n              <br />\n\n              <div className=\"input-group mb-3\">\n                <div className=\"input-group-prepend\">\n                  <span className=\"input-group-text\">\n                    <FontAwesomeIcon icon={faCode} />\n                  </span>\n                </div>\n                <textarea\n                  id=\"url-embed\"\n                  className=\"form-control\"\n                  rows={5}\n                  defaultValue={`<iframe height=\"400\" width=\"400\" allowfullscreen=\"true\" sandbox=\"allow-scripts allow-modals allow-same-origin allow-popups allow-popups-to-escape-sandbox\" src=\"${getURL(\n                    true\n                  )}\"></iframe>`}\n                  readOnly\n                ></textarea>\n                <div className=\"input-group-append\">\n                  <button\n                    id=\"copyEmbedButton\"\n                    className=\"btn btn-success\"\n                    type=\"button\"\n                    onClick={this.copyEmbedURL}\n                  >\n                    <FontAwesomeIcon icon={faCopy} />\n                  </button>\n                </div>\n              </div>\n            </Tab>\n          </Tabs>\n        </Modal.Body>\n\n        <Modal.Footer>\n          <Button variant=\"primary\" onClick={this.toggle}>\n            Close\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    );\n  }\n}\n\nexport default {\n  InvalidBuildModal,\n  AnnouncementModal,\n  AboutModal,\n  ResetModal,\n  ShareModal,\n};\n","import React, { Component } from 'react';\nimport ReactGA from 'react-ga';\nimport MediaQuery from 'react-responsive';\nimport Button from 'react-bootstrap/Button';\nimport Navbar from 'react-bootstrap/Navbar';\nimport Nav from 'react-bootstrap/Nav';\nimport NavBarButtons from './NavBarButtons';\nimport NavBarSettings from './NavBarSettings';\nimport NavBarCommander from './NavBarCommander';\nimport { GeneralTooltip } from './Tooltips';\nimport { AboutModal, ResetModal, ShareModal } from './Modals';\nimport { faInfoCircle, faHeart } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport { title, donate } from '../package.json';\nimport './styles/NavBar.css';\n\n/**\n * Nav bar component containing main application buttons/controls\n *\n * @class NavBar\n * @extends {Component}\n */\nclass NavBar extends Component {\n  constructor(props) {\n    super(props);\n    let donateStyles = Array(10).fill('outline-danger');\n    donateStyles.push('danger');\n    this.donateStyle =\n      donateStyles[Math.floor(Math.random() * donateStyles.length)];\n  }\n\n  /**\n   * Handle donate button click\n   *\n   * @memberof NavBar\n   */\n  showDonate = () => {\n    ReactGA.event({\n      category: 'App',\n      action: 'Donate',\n    });\n  };\n\n  /**\n   * Control visibility of the \"About\" modal\n   *\n   * @memberof NavBar\n   */\n  showAbout = () => {\n    this.aboutModalRef.toggle();\n    ReactGA.event({\n      category: 'App',\n      action: 'View about modal',\n    });\n  };\n\n  /**\n   * Control visibility of the \"Reset\" modal\n   *\n   * @memberof NavBar\n   */\n  showReset = () => {\n    this.resetModalRef.toggle();\n  };\n\n  /**\n   * Control visibility of the \"Share\" modal\n   *\n   * @memberof NavBar\n   */\n  showShare = () => {\n    this.shareModalRef.toggle();\n    ReactGA.event({\n      category: 'Share',\n      action: 'View share modal',\n    });\n  };\n\n  render() {\n    return (\n      <>\n        <AboutModal\n          ref={(component) => (this.aboutModalRef = component)}\n          toggleTour={this.props.toggleTour}\n          toggleAnnounce={this.props.toggleAnnounce}\n        />\n        <ResetModal\n          ref={(component) => (this.resetModalRef = component)}\n          resetTalents={this.props.resetTalents}\n        />\n        <ShareModal ref={(component) => (this.shareModalRef = component)} />\n\n        <Navbar\n          variant=\"light\"\n          className={this.props.isSpeedMode ? 'nav-speed' : 'navbar'}\n        >\n          <MediaQuery minWidth={350}>\n            <Navbar.Brand href=\"/\">\n              <img\n                id=\"nav-app-icon\"\n                src={`${process.env.PUBLIC_URL}/icon.svg`}\n                alt=\"RoK Talents Logo\"\n              ></img>\n            </Navbar.Brand>\n          </MediaQuery>\n\n          <MediaQuery minWidth={470}>\n            <Navbar.Brand href=\"/\">{title}</Navbar.Brand>\n          </MediaQuery>\n\n          <Navbar.Brand id=\"nav-icon\" className=\"mr-auto\">\n            <Button\n              id=\"button-info\"\n              data-testid=\"button-info\"\n              variant=\"outline-dark\"\n              size=\"sm\"\n              onClick={() => this.showAbout(true)}\n            >\n              <FontAwesomeIcon icon={faInfoCircle} />\n            </Button>\n\n            <a href={donate} target=\"_blank\" rel=\"noopener noreferrer\">\n              <GeneralTooltip\n                tooltip={`Support ${title} with a small donation`}\n              >\n                <Button\n                  id=\"button-donate\"\n                  data-testid=\"button-donate\"\n                  variant={this.donateStyle}\n                  size=\"sm\"\n                  onClick={() => this.showDonate()}\n                >\n                  <FontAwesomeIcon icon={faHeart} />\n                  <span className=\"nav-button-text\">Donate</span>\n                </Button>\n              </GeneralTooltip>\n            </a>\n          </Navbar.Brand>\n\n          <Nav className=\"ml-auto\">\n            <NavBarButtons\n              isScreenshotStats={this.props.isScreenshotStats}\n              calcPointsSpent={this.props.calcPointsSpent}\n              showReset={this.showReset}\n              showShare={this.showShare}\n              commander={this.props.commander}\n              red={this.props.red}\n              yellow={this.props.yellow}\n              blue={this.props.blue}\n            />\n\n            <NavBarSettings\n              toggleInfoPanel={this.props.toggleInfoPanel}\n              toggleTotalDisplay={this.props.toggleTotalDisplay}\n              toggleValueDisplay={this.props.toggleValueDisplay}\n              toggleNodeSize={this.props.toggleNodeSize}\n              toggleScreenshotStats={this.props.toggleScreenshotStats}\n              toggleSpeedMode={this.props.toggleSpeedMode}\n              toggleInstantZero={this.props.toggleInstantZero}\n              toggleInstantMax={this.props.toggleInstantMax}\n              toggleAutoFill={this.props.toggleAutoFill}\n              toggleMouseXY={this.props.toggleMouseXY}\n              toggleTalentID={this.props.toggleTalentID}\n              isShownInfoPanel={this.props.isShownInfoPanel}\n              isShownValues={this.props.isShownValues}\n              isShownTotals={this.props.isShownTotals}\n              isScreenshotStats={this.props.isScreenshotStats}\n              isSpeedMode={this.props.isSpeedMode}\n              isInstantZero={this.props.isInstantZero}\n              isInstantMax={this.props.isInstantMax}\n              isAutoFill={this.props.isAutoFill}\n              isShownMouseXY={this.props.isShownMouseXY}\n              isShownTalentID={this.props.isShownTalentID}\n              nodeSize={this.props.nodeSize}\n            />\n\n            <NavBarCommander\n              changeCommander={this.props.changeCommander}\n              commander={this.props.commander}\n            />\n          </Nav>\n        </Navbar>\n      </>\n    );\n  }\n}\n\nexport default NavBar;\n","import React from 'react';\nimport ReactGA from 'react-ga';\nimport { GeneralTooltip } from './Tooltips';\nimport Commanders from './data/commanders.json';\nimport './styles/SummaryPanel.css';\n\n/**\n * Summary panel component displaying commander info\n *\n */\nconst SummaryPanel = props => {\n  const getGuides = () => {\n    if (Commanders[props.commander].guides) {\n      let guides = [];\n\n      for (let guide in Commanders[props.commander].guides) {\n        guides.push(\n          <GuideIcon key={guide} commander={props.commander} name={guide} />\n        );\n      }\n      return <div id=\"summary-panel-guides\">Guide: {guides}</div>;\n    }\n  };\n\n  return (\n    <div id=\"summary-panel\" className=\"info-box\">\n      <h1>{props.commander ? props.commander : 'Summary'}</h1>\n      <h3>{props.commander && Commanders[props.commander].title}</h3>\n      <h3>{props.commander && getGuides()}</h3>\n\n      <div id=\"summary-panel-summary\">\n        <p>Points remaining: {props.calcPointsRemaining()}</p>\n        <p>Points spent: {props.calcPointsSpent()}</p>\n      </div>\n    </div>\n  );\n};\n\n/**\n * Icon for commander guides\n *\n * @returns {DOMElement} Icon linking to the external commander guide\n */\nconst GuideIcon = React.memo(props => {\n  const clickGuide = () => {\n    ReactGA.event({\n      category: 'Navigation',\n      action: `View guide (${props.name})`,\n      label: props.commander\n    });\n  };\n\n  return (\n    <GeneralTooltip tooltip={props.name}>\n      <a\n        href={Commanders[props.commander].guides[props.name]}\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n        onClick={clickGuide}\n      >\n        <img\n          className=\"summary-panel-guide-icon\"\n          src={`${process.env.PUBLIC_URL}/images/guides/${props.name}.png`}\n          alt={props.name}\n        ></img>\n      </a>\n    </GeneralTooltip>\n  );\n});\n\nexport default SummaryPanel;\n","import React from 'react';\nimport { HelpTooltip } from './Tooltips';\n\nimport './styles/StatsPanel.css';\n\n/**\n * Stats panel component displaying stats about the current talent build\n */\nconst StatsPanel = React.memo((props) => {\n  /**\n   * Get all calculated stats and their values\n   *\n   * @returns {DOMElement[]} Array of DOM elements containing stats and values\n   */\n  const getAllStats = () => {\n    let allStats = [];\n    const keys = Object.keys(props.stats);\n    keys.sort();\n    for (var i = 0; i < keys.length; i++) {\n      allStats.push(\n        <p key={keys[i]}>{`${keys[i]}: ${props.stats[keys[i]]}%`}</p>\n      );\n    }\n\n    return allStats.length > 0 ? allStats : <p>None</p>;\n  };\n\n  return (\n    <div id=\"stats-panel\" className=\"info-box\">\n      <h2>\n        Stats{' '}\n        <HelpTooltip tooltip=\"Totals only include unconditional and direct stat boosts. For example, does not include stats from rallies/garrison/% chance etc.\" />\n      </h2>\n      <div id=\"stats-panel-stats\">{getAllStats()}</div>\n    </div>\n  );\n});\n\nexport default StatsPanel;\n","import React, { Component } from 'react';\nimport ReactGA from 'react-ga';\nimport Collapse from 'react-bootstrap/Collapse';\nimport { HelpTooltip } from './Tooltips';\nimport './styles/StatsTalentsPanel.css';\n\n/**\n * Stats talents panel component containing selected main talents\n *\n * @class StatsTalentsPanel\n * @extends {Component}\n */\nclass StatsTalentsPanel extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isShownStatsTalents: false,\n    };\n  }\n\n  /**\n   * Toggles visibility of the main talents descriptions\n   *\n   * @memberof StatsTalentsPanel\n   */\n  toggleStatsTalents = () => {\n    this.setState((prevState) => ({\n      isShownStatsTalents: !prevState.isShownStatsTalents,\n    }));\n\n    ReactGA.event({\n      category: 'App',\n      action: 'Toggle stats talents',\n    });\n  };\n\n  /**\n   * Get all main talents and their values/text\n   *\n   * @returns {DOMElement[]} Array of DOM elements containing main talents and values\n   * @memberof StatsTalentsPanel\n   */\n  getAllMainTalents = () => {\n    let allMainTalents = [];\n\n    for (let talent of this.props.mainTalents) {\n      allMainTalents.push(\n        <MainTalent\n          isShownStatsTalents={this.state.isShownStatsTalents}\n          key={talent.name}\n          name={talent.name}\n          color={talent.color}\n          points={talent.points}\n          maxPoints={talent.maxPoints}\n          text={talent.text}\n        />\n      );\n    }\n\n    return allMainTalents.length > 0 ? allMainTalents : 'None';\n  };\n\n  render() {\n    return (\n      <div\n        id=\"stats-talents\"\n        className=\"info-box\"\n        onClick={this.toggleStatsTalents}\n      >\n        <h2 id=\"stats-talents-title\">\n          Main Talents{' '}\n          <HelpTooltip tooltip=\"Expandable list of all selected main talents\" />\n        </h2>\n        <div data-testid=\"stats-talents\">{this.getAllMainTalents()}</div>\n      </div>\n    );\n  }\n}\n\nfunction MainTalent(props) {\n  return (\n    <div className={`stats-talents-main`}>\n      <div className=\"stats-talents-title\">\n        <span className={`bullet bg-${props.color}`}></span>\n\n        {`${props.name} (${props.points}/${props.maxPoints})`}\n      </div>\n\n      <Collapse in={props.isShownStatsTalents}>\n        <div className=\"stats-talents-text\">{props.text}</div>\n      </Collapse>\n    </div>\n  );\n}\n\nexport default StatsTalentsPanel;\n","import React, { Component } from 'react';\nimport MediaQuery from 'react-responsive';\nimport SummaryPanel from './SummaryPanel';\nimport StatsPanel from './StatsPanel';\nimport StatsTalentsPanel from './StatsTalentsPanel';\nimport ErrorBoundary from './Error';\n\nimport Commanders from './data/commanders.json';\nimport { getMaxTalentCount, replaceTalentText, isTouchDevice } from './utils';\nimport './styles/InfoPanel.css';\n\n/**\n * Info panel component displaying stats about the current talent build\n *\n * @class InfoPanel\n * @extends {Component}\n */\nclass InfoPanel extends Component {\n  /**\n   * Calculate all stats on point assignment\n   *\n   * @returns {[Array, Object]} Calculated stats and object containing main talents\n   * @memberof InfoPanel\n   */\n  calcStats() {\n    let mainTalents = [];\n    let stats = {};\n\n    if (this.props.commander) {\n      const commanderData = Commanders[this.props.commander];\n\n      for (let color of ['red', 'yellow', 'blue']) {\n        const talentData = this.props.treeData[commanderData[color]];\n        const selectedValues = this.props[color];\n\n        for (let i = 1; i < selectedValues.length + 1; i++) {\n          const pointsAssigned = selectedValues[i - 1];\n\n          if (pointsAssigned !== 0) {\n            const talent = talentData[i];\n\n            let statName;\n            if (talent.stats instanceof Array) {\n              statName = talent.stats;\n            } else if (talent.stats !== '') {\n              statName = [talent.stats];\n            }\n\n            if (statName) {\n              for (let stat of statName) {\n                if (!(stat in stats)) {\n                  stats[stat] = 0;\n                }\n                stats[stat] += talent.values[pointsAssigned - 1];\n              }\n            }\n\n            if (talent.type === 'node-large') {\n              mainTalents.push({\n                name: talent.name,\n                color: color,\n                points: pointsAssigned,\n                maxPoints: getMaxTalentCount(talent.values),\n                text: replaceTalentText(\n                  talent.text,\n                  talent.values,\n                  pointsAssigned - 1\n                ),\n              });\n            }\n          }\n        }\n      }\n    }\n    return [stats, mainTalents];\n  }\n\n  render() {\n    const [stats, mainTalents] = this.calcStats();\n\n    return (\n      <div\n        id=\"info-panel\"\n        data-testid=\"info-panel\"\n        className={\n          this.props.isShownInfoPanel ? 'info-panel-open' : 'info-panel-closed'\n        }\n      >\n        <ErrorBoundary>\n          <div id=\"summary-panel-container\">\n            <SummaryPanel\n              commander={this.props.commander}\n              calcPointsRemaining={this.props.calcPointsRemaining}\n              calcPointsSpent={this.props.calcPointsSpent}\n            />\n            <MediaQuery orientation=\"portrait\">\n              <StatsPanel stats={stats} />\n            </MediaQuery>\n          </div>\n        </ErrorBoundary>\n\n        <MediaQuery orientation=\"landscape\">\n          <ErrorBoundary>\n            <StatsPanel stats={stats} />\n          </ErrorBoundary>\n\n          {!isTouchDevice() && (\n            <ErrorBoundary>\n              <StatsTalentsPanel mainTalents={mainTalents} />\n            </ErrorBoundary>\n          )}\n        </MediaQuery>\n      </div>\n    );\n  }\n}\n\nexport default InfoPanel;\n","// Utility to map data files to object\nfunction loadTreeData(version) {\n  const treeData = {\n    Attack: require(`./v${version}/Attack.json`),\n    Archer: require(`./v${version}/Archer.json`),\n    Cavalry: require(`./v${version}/Cavalry.json`),\n    Conquering: require(`./v${version}/Conquering.json`),\n    Defense: require(`./v${version}/Defense.json`),\n    Garrison: require(`./v${version}/Garrison.json`),\n    Gathering: require(`./v${version}/Gathering.json`),\n    Infantry: require(`./v${version}/Infantry.json`),\n    Integration: require(`./v${version}/Integration.json`),\n    Leadership: require(`./v${version}/Leadership.json`),\n    Mobility: require(`./v${version}/Mobility.json`),\n    Peacekeeping: require(`./v${version}/Peacekeeping.json`),\n    Skill: require(`./v${version}/Skill.json`),\n    Support: require(`./v${version}/Support.json`),\n    Versatility: require(`./v${version}/Versatility.json`)\n  };\n\n  if (process.env.NODE_ENV === 'development') {\n    console.info(`Info: Loading game data version ${version}`);\n  }\n\n  return treeData;\n}\n\nexport default loadTreeData;\n","import React, { Component, Suspense } from 'react';\nimport ReactGA from 'react-ga';\nimport { jsPlumb } from 'jsplumb';\nimport Progress from './Progress';\nimport Spinner from 'react-bootstrap/Spinner';\nimport GuidedTour from './GuidedTour';\nimport NavBar from './NavBar';\nimport InfoPanel from './InfoPanel';\nimport { InvalidBuildModal, AnnouncementModal } from './Modals';\nimport ErrorBoundary from './Error';\nimport loadTreeData from './data/AllTrees';\nimport Commanders from './data/commanders.json';\nimport { maxPoints, getEmptyState } from './values';\nimport { version, dataVersion } from '../package.json';\nimport {\n  sumArray,\n  getMaxTalentCount,\n  setTitle,\n  isTouchDevice,\n  isUpgrade,\n  isNewUser,\n  encode,\n  decode,\n} from './utils';\n\nimport './styles/App.css';\nimport './styles/fonts.css';\n\nconst TreePanel = React.lazy(() => import('./TreePanel'));\nlet treeData;\n\n/**\n * Main application component. Contains high level logic for managing application state\n *\n * @class App\n * @extends {Component}\n */\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.invalidModalFlag = false;\n    this.invalidBuildMessage = '';\n\n    // Set initial state from query string\n    const urlParams = this.props.url.slice(1).split(';');\n\n    if (this.props.isEmbed) {\n      ReactGA.event({\n        category: 'Load',\n        action: 'Embed',\n      });\n    }\n\n    switch (urlParams.length) {\n      case 1: // blank url\n        this.state = getEmptyState(dataVersion, this.props.isEmbed);\n        treeData = loadTreeData(dataVersion);\n        this.updateURL('clear');\n        ReactGA.event({\n          category: 'Load',\n          action: 'New',\n        });\n        break;\n      case 5: // complete url\n      case 6: // embed url\n        // eslint-disable-next-line\n        let path, urlDataVersion, comID, red, yellow, blue;\n        if (urlParams.length === 5) {\n          [urlDataVersion, comID, red, yellow, blue] = urlParams;\n        } else if (urlParams.length === 6) {\n          [path, urlDataVersion, comID, red, yellow, blue] = urlParams;\n        }\n        urlDataVersion = parseInt(urlDataVersion);\n\n        const commanderName = Object.keys(Commanders).find(\n          (key) => Commanders[key]['id'] === comID\n        );\n\n        // Check for invalid build\n        if (urlDataVersion > dataVersion) {\n          this.invalidBuildMessage = 'Incorrect game data version';\n          this.invalidModalFlag = true;\n        } else if (!commanderName) {\n          this.invalidBuildMessage = 'Unknown commander ID';\n          this.invalidModalFlag = true;\n        } else {\n          this.state = getEmptyState(urlDataVersion, this.props.isEmbed);\n          treeData = loadTreeData(urlDataVersion);\n          this.state = {\n            ...this.state,\n            dataVersion: urlDataVersion,\n            commander: commanderName,\n            ...this.createZeroTalents(commanderName),\n          };\n\n          const colorPairs = [\n            [red, 'red'],\n            [yellow, 'yellow'],\n            [blue, 'blue'],\n          ];\n\n          for (let color of colorPairs) {\n            // Decode and split talent string into array\n            let talents = decode(color[0]).split('').map(Number);\n            const maxArray = this.createMaxValueArray(\n              this.state.commander,\n              color[1]\n            );\n\n            if (talents.length !== this.state[color[1]].length) {\n              // Check talent array is correct length\n              this.invalidBuildMessage = `Incorrect number of talents (${color[1]} tree)`;\n              this.invalidModalFlag = true;\n              break;\n            } else if (\n              // Check spent values are not too large\n              talents.some(function (el, idx) {\n                return el > maxArray[idx];\n              })\n            ) {\n              this.invalidBuildMessage = `Too many points assigned in talent (${color[1]} tree)`;\n              this.invalidModalFlag = true;\n              break;\n            } else {\n              // Store color array in state\n              this.state[color[1]] = talents;\n            }\n          }\n\n          // Check that the talent build has not overspent points\n          if (this.calcPointsRemaining() < 0) {\n            this.invalidBuildMessage = `Number of spent talent points exceeds maximum`;\n            this.invalidModalFlag = true;\n          }\n        }\n\n        if (this.invalidModalFlag) {\n          this.state = getEmptyState(dataVersion, this.props.isEmbed);\n          treeData = loadTreeData(dataVersion);\n          this.updateURL('clear');\n          ReactGA.event({\n            category: 'Load',\n            action: 'Error',\n            label: this.props.url,\n          });\n        } else {\n          this.updateURL('update');\n          ReactGA.event({\n            category: 'Load',\n            action: 'Existing',\n            label: this.props.url,\n          });\n        }\n        break;\n      default:\n        // Incorrect number of url params\n        this.invalidBuildMessage = `Incorrect number of build parameters (length: ${urlParams.length}, expected: 5)`;\n        this.invalidModalFlag = true;\n        this.state = getEmptyState(dataVersion, this.props.isEmbed);\n        treeData = loadTreeData(dataVersion);\n        this.updateURL('clear');\n        ReactGA.event({\n          category: 'Load',\n          action: 'Error',\n          label: this.props.url,\n        });\n    }\n  }\n\n  componentDidMount() {\n    if (!this.props.isEmbed) {\n      localStorage.setItem('version', version);\n    }\n\n    if (isNewUser()) {\n      localStorage.setItem('isNewUser', false);\n    }\n\n    this.setState({ showProgress: false });\n  }\n\n  /**\n   * Update the current URL\n   *\n   * @param {string} method {update | clear} Should the new URL be updated\n   * with the new state or cleared (new app state)?\n   * @memberof App\n   */\n  updateURL = (method) => {\n    let queryString;\n\n    switch (method) {\n      case 'update':\n        queryString =\n          '?' +\n          (this.props.isEmbed ? 'embed;' : '') +\n          [\n            this.state.dataVersion,\n            Commanders[this.state.commander].id,\n            encode(this.state.red.join('')),\n            encode(this.state.yellow.join('')),\n            encode(this.state.blue.join('')),\n          ].join(';');\n\n        setTitle(\n          this.state.commander,\n          this.state.red,\n          this.state.yellow,\n          this.state.blue\n        );\n        break;\n      case 'clear':\n        queryString = '/';\n        break;\n      default:\n        break;\n    }\n    window.history.replaceState('', '', queryString);\n  };\n\n  /**\n   * Set blank state object for the newly selected commander,\n   * followed by `this.updateURL()`\n   *\n   * @param {string} commander Name of the commander being changed to\n   * @memberof App\n   */\n  changeCommander = (commander) => {\n    if (this.state.dataVersion !== dataVersion) {\n      treeData = loadTreeData(dataVersion);\n    }\n\n    const zeroTalents = this.createZeroTalents(commander);\n    this.setState(\n      { dataVersion: dataVersion, commander: commander, ...zeroTalents },\n      () => {\n        this.updateURL('update');\n        this.treePanelRef.drawLines();\n\n        ReactGA.event({\n          category: 'Navigation',\n          action: 'Change commander',\n          label: commander,\n        });\n      }\n    );\n\n    if (!isTouchDevice()) {\n      this.treePanelRef.resetPanZoom();\n    }\n  };\n\n  /**\n   * Create a new/blank state object for a commander. The individual talent\n   * tree arrays will be filled with an appropriate number of `0`\n   *\n   * @param {string} commander Name of commander to create empty talents for\n   * @returns {object} Object containing `0` arrays for each tree color\n   * @memberof App\n   */\n  createZeroTalents = (commander) => {\n    const numRed = Object.keys(treeData[Commanders[commander]['red']]).length;\n    const numYellow = Object.keys(treeData[Commanders[commander]['yellow']])\n      .length;\n    const numBlue = Object.keys(treeData[Commanders[commander]['blue']]).length;\n\n    const zeroTalents = {\n      red: Array(numRed).fill(0),\n      yellow: Array(numYellow).fill(0),\n      blue: Array(numBlue).fill(0),\n    };\n\n    return zeroTalents;\n  };\n\n  /**\n   * Set all tree node values to `0` for the currently selected commander\n   *\n   * @memberof App\n   */\n  resetTalents = () => {\n    ReactGA.event({\n      category: 'App',\n      action: 'Reset build',\n    });\n    this.changeCommander(this.state.commander);\n  };\n\n  /**\n   * Change the value of a single talent node. Followed by `this.updateURL()`\n   *\n   * @param {string} treeName Name of the tree the node belongs to\n   * @param {string} color Color of the tree the node belongs to\n   * @param {number} idx Index of the node in the tree/color array.\n   * @param {string} how {increase | decrease} Should node value be increased\n   *  or decreased?\n   * @param {number} amount How much to change the value by\n   * @memberof App\n   */\n  changeTalentValue = (treeName, color, idx, how, amount) => {\n    let newArr = this.state[color];\n    const lines = jsPlumb.select({\n      source: document.getElementById(`${treeName + idx}`),\n    });\n\n    switch (how) {\n      case 'increase':\n        newArr[idx - 1] += amount;\n        if (newArr[idx - 1] > 0) {\n          lines.addClass(`line-${color}`);\n        }\n        break;\n      case 'decrease':\n        newArr[idx - 1] -= amount;\n        if (newArr[idx - 1] === 0) {\n          lines.removeClass(`line-${color}`);\n        }\n        break;\n      default:\n    }\n\n    this.setState({ [color]: newArr }, () => this.updateURL('update'));\n  };\n\n  /**\n   * Get the maximum number of available points for each talent\n   *\n   * @param {string} commander Name of the commander\n   * @param {string} color Color of the tree to get max values for\n   * @returns {Number[]} Array of maximum available points for each talent in the tree\n   * @memberof App\n   */\n  createMaxValueArray = (commander, color) => {\n    let maxArray = [];\n\n    Object.keys(treeData[Commanders[commander][color]]).forEach((id) => {\n      maxArray.push(\n        getMaxTalentCount(treeData[Commanders[commander][color]][id]['values'])\n      );\n    });\n\n    return maxArray;\n  };\n\n  /**\n   * Calculate the total number of talent points spent. This is just a sum\n   * of all the color/tree array values\n   *\n   * @param {string} color Color of the tree to sum. Omitting this param sums\n   * across all trees\n   * @returns {number} Total number of talent points spent\n   * @memberof App\n   */\n  calcPointsSpent = (color = 'total') => {\n    let points;\n\n    if (color === 'total') {\n      points = [...this.state.red, ...this.state.yellow, ...this.state.blue];\n    } else {\n      points = [...this.state[color]];\n    }\n\n    return sumArray(points);\n  };\n\n  /**\n   * Calculate number of remaining talent points available to be spent\n   *\n   * @returns {number} Number of remaining talent points\n   * @memberof App\n   */\n  calcPointsRemaining = () => {\n    return maxPoints - this.calcPointsSpent();\n  };\n\n  /**\n   * Toggle display of info panel\n   *\n   * @memberof App\n   */\n  toggleInfoPanel = () => {\n    this.setState(\n      (prevState) => ({\n        isShownInfoPanel: !prevState.isShownInfoPanel,\n      }),\n      () => {\n        this.treePanelRef.repaint();\n        localStorage.setItem('isShownInfoPanel', this.state.isShownInfoPanel);\n      }\n    );\n\n    ReactGA.event({\n      category: 'Settings',\n      action: 'Toggle info panel',\n    });\n  };\n\n  /**\n   * Toggle display of total number of points spent in each tree\n   *\n   * @memberof App\n   */\n  toggleTotalDisplay = () => {\n    this.setState(\n      (prevState) => ({\n        isShownTotals: !prevState.isShownTotals,\n      }),\n      () => {\n        localStorage.setItem('isShownTotals', this.state.isShownTotals);\n      }\n    );\n\n    ReactGA.event({\n      category: 'Settings',\n      action: 'Toggle tree totals',\n    });\n  };\n\n  /**\n   * Toggle display of node values\n   *\n   * @memberof App\n   */\n  toggleValueDisplay = () => {\n    this.setState(\n      (prevState) => ({\n        isShownValues: !prevState.isShownValues,\n      }),\n      () => {\n        localStorage.setItem('isShownValues', this.state.isShownValues);\n      }\n    );\n\n    ReactGA.event({\n      category: 'Settings',\n      action: 'Toggle node values',\n    });\n  };\n\n  /**\n   * Toggle node size\n   *\n   * @param {string} size Desired node size\n   * @memberof App\n   */\n  toggleNodeSize = (size) => {\n    this.setState({ nodeSize: size }, () => {\n      this.treePanelRef.repaint();\n      localStorage.setItem('nodeSize', this.state.nodeSize);\n    });\n\n    ReactGA.event({\n      category: 'Settings',\n      action: 'Toggle node size',\n      label: size,\n    });\n  };\n\n  /**\n   * Toggle screenshot stats\n   *\n   * @memberof App\n   */\n  toggleScreenshotStats = () => {\n    this.setState(\n      (prevState) => ({\n        isScreenshotStats: !prevState.isScreenshotStats,\n      }),\n      () => {\n        localStorage.setItem('isScreenshotStats', this.state.isScreenshotStats);\n      }\n    );\n\n    ReactGA.event({\n      category: 'Settings',\n      action: 'Toggle screenshot stats',\n    });\n  };\n\n  /**\n   * Toggle speed mode\n   *\n   * @memberof App\n   */\n  toggleSpeedMode = () => {\n    this.setState(\n      (prevState) => ({\n        isSpeedMode: !prevState.isSpeedMode,\n      }),\n      () => {\n        this.treePanelRef.drawLines();\n        localStorage.setItem('isSpeedMode', this.state.isSpeedMode);\n      }\n    );\n\n    ReactGA.event({\n      category: 'Settings',\n      action: 'Toggle speed mode',\n    });\n  };\n\n  /**\n   * Toggle instant zero mode\n   *\n   * @memberof App\n   */\n  toggleInstantZero = () => {\n    this.setState(\n      (prevState) => ({\n        isInstantZero: !prevState.isInstantZero,\n      }),\n      () => {\n        localStorage.setItem('isInstantZero', this.state.isInstantZero);\n      }\n    );\n\n    ReactGA.event({\n      category: 'Settings',\n      action: 'Toggle instant zero',\n    });\n  };\n\n  /**\n   * Toggle instant max mode\n   *\n   * @memberof App\n   */\n  toggleInstantMax = () => {\n    this.setState(\n      (prevState) => ({\n        isInstantMax: !prevState.isInstantMax,\n      }),\n      () => {\n        localStorage.setItem('isInstantMax', this.state.isInstantMax);\n      }\n    );\n\n    ReactGA.event({\n      category: 'Settings',\n      action: 'Toggle instant max',\n    });\n  };\n\n  /**\n   * Toggle auto fill mode\n   *\n   * @memberof App\n   */\n  toggleAutoFill = () => {\n    this.setState(\n      (prevState) => ({\n        isAutoFill: !prevState.isAutoFill,\n      }),\n      () => {\n        localStorage.setItem('isAutoFill', this.state.isAutoFill);\n      }\n    );\n\n    ReactGA.event({\n      category: 'Settings',\n      action: 'Toggle auto fill',\n    });\n  };\n\n  /**\n   * Toggle mouse XY position display\n   *\n   * @memberof App\n   */\n  toggleMouseXY = () => {\n    this.setState(\n      (prevState) => ({\n        isShownMouseXY: !prevState.isShownMouseXY,\n      }),\n      () => {\n        this.treePanelRef.toggleMouseListeners();\n        localStorage.setItem('isShownMouseXY', this.state.isShownMouseXY);\n      }\n    );\n  };\n\n  /**\n   * Toggle tooltip talent ID\n   *\n   * @memberof App\n   */\n  toggleTalentID = () => {\n    this.setState(\n      (prevState) => ({\n        isShownTalentID: !prevState.isShownTalentID,\n      }),\n      () => {\n        localStorage.setItem('isShownTalentID', this.state.isShownTalentID);\n      }\n    );\n  };\n\n  /**\n   * Toggle guided tour\n   *\n   * @memberof App\n   */\n  toggleTour = () => {\n    this.tourRef.restartTour();\n  };\n\n  /**\n   * Toggle announcement\n   *\n   * @memberof App\n   */\n  toggleAnnounce = (version) => {\n    this.announceRef.show(version);\n  };\n\n  render() {\n    return (\n      <div id=\"app\">\n        {!this.props.isEmbed && (\n          <GuidedTour ref={(component) => (this.tourRef = component)} />\n        )}\n\n        {this.invalidModalFlag && (\n          <InvalidBuildModal message={this.invalidBuildMessage} />\n        )}\n\n        <AnnouncementModal\n          ref={(component) => (this.announceRef = component)}\n          isEmbed={this.props.isEmbed}\n          isUpgrade={\n            localStorage.getItem('version')\n              ? isUpgrade(localStorage.getItem('version'), version)\n              : true\n          }\n          isNewUser={isNewUser()}\n          isInvalidBuild={this.invalidModalFlag}\n        />\n\n        <Progress\n          isAnimating={this.state.showProgress}\n          animationDuration={1000}\n        />\n\n        {!this.props.isEmbed && (\n          <ErrorBoundary>\n            <NavBar\n              toggleInfoPanel={this.toggleInfoPanel}\n              toggleTotalDisplay={this.toggleTotalDisplay}\n              toggleValueDisplay={this.toggleValueDisplay}\n              toggleNodeSize={this.toggleNodeSize}\n              toggleScreenshotStats={this.toggleScreenshotStats}\n              toggleSpeedMode={this.toggleSpeedMode}\n              toggleInstantZero={this.toggleInstantZero}\n              toggleInstantMax={this.toggleInstantMax}\n              toggleAutoFill={this.toggleAutoFill}\n              toggleMouseXY={this.toggleMouseXY}\n              toggleTalentID={this.toggleTalentID}\n              toggleAnnounce={this.toggleAnnounce}\n              toggleTour={this.toggleTour}\n              changeCommander={this.changeCommander}\n              calcPointsSpent={this.calcPointsSpent}\n              resetTalents={this.resetTalents}\n              commander={this.state.commander}\n              red={this.state.red}\n              yellow={this.state.yellow}\n              blue={this.state.blue}\n              nodeSize={this.state.nodeSize}\n              isShownInfoPanel={this.state.isShownInfoPanel}\n              isShownValues={this.state.isShownValues}\n              isShownTotals={this.state.isShownTotals}\n              isScreenshotStats={this.state.isScreenshotStats}\n              isSpeedMode={this.state.isSpeedMode}\n              isInstantZero={this.state.isInstantZero}\n              isInstantMax={this.state.isInstantMax}\n              isAutoFill={this.state.isAutoFill}\n              isShownMouseXY={this.state.isShownMouseXY}\n              isShownTalentID={this.state.isShownTalentID}\n            />\n          </ErrorBoundary>\n        )}\n\n        <div id=\"main-container\">\n          <Suspense\n            fallback={\n              <div id=\"spinner\">\n                <Spinner size=\"lg\" animation=\"border\" variant=\"light\" />\n                <br />\n                <span>Loading</span>\n              </div>\n            }\n          >\n            {!this.props.isEmbed && (\n              <ErrorBoundary>\n                <InfoPanel\n                  calcPointsSpent={this.calcPointsSpent}\n                  calcPointsRemaining={this.calcPointsRemaining}\n                  treeData={treeData}\n                  commander={this.state.commander}\n                  red={this.state.red}\n                  yellow={this.state.yellow}\n                  blue={this.state.blue}\n                  isShownInfoPanel={this.state.isShownInfoPanel}\n                />\n              </ErrorBoundary>\n            )}\n\n            <ErrorBoundary>\n              <TreePanel\n                ref={(component) => (this.treePanelRef = component)}\n                changeCommander={this.changeCommander}\n                resetTalents={this.resetTalents}\n                changeTalentValue={this.changeTalentValue}\n                calcPointsSpent={this.calcPointsSpent}\n                calcPointsRemaining={this.calcPointsRemaining}\n                treeData={treeData}\n                dataVersion={this.state.dataVersion}\n                commander={this.state.commander}\n                red={this.state.red}\n                yellow={this.state.yellow}\n                blue={this.state.blue}\n                nodeSize={this.state.nodeSize}\n                isShownValues={this.state.isShownValues}\n                isShownTotals={this.state.isShownTotals}\n                isSpeedMode={this.state.isSpeedMode}\n                isInstantZero={this.state.isInstantZero}\n                isInstantMax={this.state.isInstantMax}\n                isAutoFill={this.state.isAutoFill}\n                isShownMouseXY={this.state.isShownMouseXY}\n                isShownTalentID={this.state.isShownTalentID}\n                isEmbed={this.props.isEmbed}\n              />\n            </ErrorBoundary>\n          </Suspense>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport ReactGA from 'react-ga';\nimport { isEmbed } from './utils';\nimport { homepage } from '../package.json';\nimport * as serviceWorker from './serviceWorker';\nimport App from './App';\n\nconst embed = isEmbed(window.location.search);\n\nif (window.self === window.top || embed) {\n  ReactGA.initialize('UA-114296077-2');\n  ReactGA.pageview('/');\n\n  const url = window.location.search;\n  ReactDOM.render(\n    <App url={url} isEmbed={embed} />,\n    document.getElementById('root')\n  );\n\n  // If you want your app to work offline and load faster, you can change\n  // unregister() to register() below. Note this comes with some pitfalls.\n  // Learn more about service workers: https://bit.ly/CRA-PWA\n  serviceWorker.unregister();\n} else {\n  ReactDOM.render(\n    <div>\n      Please visit the full website at{' '}\n      <a href={homepage} target=\"_blank\" rel=\"noopener noreferrer\">\n        {homepage.split('//')[1]}\n      </a>\n    </div>,\n    document.getElementById('root')\n  );\n}\n"],"sourceRoot":""}